{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst minute = document.querySelector('[data-minutes]');\nconst second = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\nfunction convertMsToTime(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    if (selectedDate.getTime() <= currentDate.getTime()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future!',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n    console.log(selectedDates[0]);\n  },\n};\n\nlet userSelectedDate;\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  const countdown = setInterval(() => {\n    const timeLaps = userSelectedDate - Date.now();\n    const result = convertMsToTime(timeLaps);\n    const { days, hours, minutes, seconds } = result;\n    day.textContent = addLeadingZero(days);\n    hour.textContent = addLeadingZero(hours);\n    minute.textContent = addLeadingZero(minutes);\n    second.textContent = addLeadingZero(seconds);\n    if (timeLaps < 1000) {\n      clearInterval(countdown);\n    }\n  }, 1000);\n});\n\nflatpickr('#datetime-picker', options);\n"],"names":["startBtn","day","hour","minute","second","convertMsToTime","ms","days","hours","minutes","seconds","addLeadingZero","value","options","selectedDates","selectedDate","currentDate","iziToast","userSelectedDate","countdown","timeLaps","result","flatpickr"],"mappings":"4xBAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAEtDJ,EAAS,SAAW,GACpB,SAASK,EAAgBC,EAAI,CAM3B,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAC7BE,EAAc,IAAI,KAEpBD,EAAa,QAAO,GAAMC,EAAY,QAAO,GAC/CC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACT,SAAU,UAClB,CAAO,EACDjB,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBkB,EAAmBJ,EAAc,IAEnC,QAAQ,IAAIA,EAAc,EAAE,CAC7B,CACH,EAEA,IAAII,EAEJlB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpB,MAAMmB,EAAY,YAAY,IAAM,CAClC,MAAMC,EAAWF,EAAmB,KAAK,IAAG,EACtCG,EAAShB,EAAgBe,CAAQ,EACjC,CAAE,KAAAb,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKW,EAC1CpB,EAAI,YAAcU,EAAeJ,CAAI,EACrCL,EAAK,YAAcS,EAAeH,CAAK,EACvCL,EAAO,YAAcQ,EAAeF,CAAO,EAC3CL,EAAO,YAAcO,EAAeD,CAAO,EACvCU,EAAW,KACb,cAAcD,CAAS,CAE1B,EAAE,GAAI,CACT,CAAC,EAEDG,EAAU,mBAAoBT,CAAO"}